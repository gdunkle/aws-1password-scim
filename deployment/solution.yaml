AWSTemplateFormatVersion: 2010-09-09

Description: aws-1password-scim - Translation of the aws-ecsfargate-terraform project to cfn

Parameters:
  DomainName:
    Type: String
  VPC:
    Description: >-
      VPC-ID of your existing Virtual Private Cloud (VPC) where you want to
      depoy the scime bridge to.
    Type: 'AWS::EC2::VPC::Id'
  Subnets:
    ConstraintDescription: must be list of existing subnet Ids
    Description: >-
      At least two existing Subnets in separate Availability Zones your Virtual
      Private Cloud (VPC)
    Type: 'List<AWS::EC2::Subnet::Id>'
  ScimSessionSecretsManagerArn:
    Type: String
    Description: The arn of the secrets manager key where the scim session value is stored

  CloudwatchLogGroupName:
    Type: String
    Default: 'scim-bridge-logs'
  ECSClusterName:
    Type: String
    Default: 'scim-bridge'

Mappings:

  MetricsMap:
    Send-Data:
      SendAnonymousData: "Yes" # change to 'No' if needed

  SourceCode:
    General:
      S3Bucket: %%BUCKET_NAME%%
      KeyPrefix: "%%SOLUTION_NAME%%/%%VERSION%%"

Resources:

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'ecs-tasks.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !Ref ScimSessionSecretsManagerArn
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 256
      ExecutionRoleArn: !Ref ExecutionRole
      Family: !Ref ECSClusterName
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      #TaskRoleArn: !Ref TaskRole
      ContainerDefinitions:
        - Name: "scim-bridge"
          Essential: true
          Image: "1password/scim:v1.6.1"
          Cpu: 128
          Memory: 512
          DependsOn:
            - Condition: "START"
              ContainerName: "redis"
          PortMappings:
            - ContainerPort: 3002
              HostPort: 3002
          Secrets:
            - Name: OP_SESSION
              ValueFrom: !Ref ScimSessionSecretsManagerArn
          Environment:
            - Name: OP_REDIS_HOST
              Value: localhost
            - Name: OP_LETSENCRYPT_DOMAIN
              Value: ""
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-group: !Ref LogGroup
              awslogs-region: !Sub "${AWS::Region}"
              awslogs-stream-prefix: "ecs-scim"
        - Name: "redis"
          Image: "redis:latest"
          Cpu: 128
          Memory: 256
          Essential: true
          PortMappings:
            - ContainerPort: 6379
              HostPort: 6379
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-group: !Ref LogGroup
              awslogs-region: !Sub "${AWS::Region}"
              awslogs-stream-prefix: "ecs-redis"
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ECSClusterName
  Service:
    Type: AWS::ECS::Service
    DependsOn:
      - HttpTargetGroup
      - LoadBalancerRule
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: 1

      LaunchType: FARGATE
      PlatformVersion: 1.4.0
      LoadBalancers:
        - ContainerName: "scim-bridge"
          ContainerPort: 3002
          TargetGroupArn: !Ref HttpTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref SecurityGroups
          Subnets: !Ref Subnets
      SchedulingStrategy: REPLICA
      ServiceName: "scim-bridge"
      TaskDefinition: !Ref TaskDefinition
      PropagateTags: TASK_DEFINITION
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "scim-bridge-alb"
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Subnets: !Ref Subnets
      SecurityGroups:
        - !Ref SecurityGroups

  HttpRedirectListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - ApplicationLoadBalancer
    Properties:
      DefaultActions:
        - RedirectConfig:
            Host: "#{host}"
            Path: "/#{path}"
            Port: "443"
            Protocol: HTTPS
            Query: "#{query}"
            StatusCode: HTTP_301
          Type: "redirect"
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
  HttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref HttpTargetGroup
          Type: 'forward'
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref LoadBalancerSSLCertificate
  LoadBalancerSSLCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: DNS
  HttpTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: 3002
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Matcher:
        HttpCode: 200,301,302
      Name: "scim-bridge"
      Port: 3002
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VPC
  LoadBalancerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref HttpTargetGroup
          Type: 'forward'
      Conditions:
        - Field: path-pattern
          Values:
            - /
      ListenerArn: !Ref HttpsListener
      Priority: 1
  SecurityGroups:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: scim-bridge-sg
      SecurityGroupEgress:
        - FromPort: 0
          ToPort: 0
          IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - FromPort: 80
          ToPort: 80
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
        - FromPort: 443
          ToPort: 443
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
  SecurityGroupsSelfIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      FromPort: 3002
      ToPort: 3002
      IpProtocol: tcp
      GroupId: !Ref SecurityGroups
      SourceSecurityGroupId: !Ref SecurityGroups
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/ecs/${CloudwatchLogGroupName}"
      RetentionInDays: 1